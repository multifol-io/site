@inject HttpClient httpClient
@inject NavigationManager Navigation
@inject IAppData appData
@inject LocalStorageAccessor LocalStorageAccessor
@inject IProfileUtility ProfileUtilities
@using Models

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            @if (new Uri(Navigation.Uri).Host == "bogle.tools")
            {
                <span>bogle.tools (OBSOLETE)</span>
            }
            else
            {
                <span style=color:yellow>MultiFol</span><span>.io</span>
            }
        </a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

@if (new Uri(Navigation.Uri).Host != "bogle.tools")
{
    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/portfolio-tracker">
                    <span style="font-Size:24pt">📈</span>&nbsp;Portfolio Tracker
                </NavLink>
            </div>

            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/savings-planner">
                    <span style="font-Size:24pt">💰</span>&nbsp;Savings Planner
                </NavLink>
            </div>

            <hr style=color:white />

            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/portfolio-tracker/view/editor" style="font-size:10pt">
                    <span style="font-Size:24pt">✏️</span>&nbsp;Edit Accounts / Holdings
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/import">
                    <span style="font-Size:24pt">⬆️</span>&nbsp;Import Center
                </NavLink>
            </div>

            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/profiles">
                    <span style="font-Size:14pt">🧑‍🦳🧑‍🦰👵</span>&nbsp;Multiple Portfolios
                </NavLink>
            </div>

            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/help">
                    <span style="font-Size:24pt">🔭</span>&nbsp;Help/FAQ
                </NavLink>
            </div>
            
            <hr style=color:white />

            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/portfolio-review">
                    <span style="font-Size:24pt">🧐</span>&nbsp;Portfolio Review
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink class="nav-link" href="/rsu-tracker">
                    <span style="font-Size:24pt">🔮</span>&nbsp;RSU Tracker
                </NavLink>
            </div>
            <br/>
            <div class="nav-item px-1" style="font-style:italic;font-Size:10pt;color:white;text-align:center">
                "Take charge of your savings!"
            </div>
        </nav>

    </div>
}

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        var profileNames = await ProfileUtilities.GetProfileNames();

        if (appData.CurrentProfileName != null && profileNames.Contains(appData.CurrentProfileName))
        {
            await ProfileUtilities.Load(appData);
        }
        else
        {
            if (profileNames.Count == 0)
            {
                appData.CurrentProfileName = "primary";
                await LocalStorageAccessor.SetValueAsync("CurrentProfileName", appData.CurrentProfileName);
                appData.FamilyData = new FamilyData(appData);
                await ProfileUtilities.Save(appData.CurrentProfileName, appData.FamilyData);
            }
            else
            {
                appData.CurrentProfileName = null;
                if (!Navigation.Uri.ToString().Contains("/import/"))
                {
                    appData.LastPageUri = Navigation.Uri;
                    Navigation.NavigateTo("/profiles");
                }
            }
        }
    }
}
